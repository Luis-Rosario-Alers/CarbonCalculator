name: Build and Release

# Trigger the workflow on push to tags matching the pattern "v*.*.*"
on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read
  packages: write
  actions: write

jobs:
  build:
    continue-on-error: true
    # Define a matrix build to run on the latest versions of Ubuntu, macOS, and Windows
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      # Set up Python 3.12
      - uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.12'
      # Install dependencies
      - run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash
      - name: Install dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxkbcommon-x11-0 libxcb-shape0 libxcb-xkb1 libxcb-icccm4 libxcb-render-util0 libxcb-image0 libxcb-cursor0 libxcb-keysyms1
        shell: bash

      - run: |
          LOG_LEVEL=debug
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            pyinstaller \
              --add-data "src/data/resources:resources" \
              --icon "src/data/resources/assets/icon.ico" \
              --paths src \
              src/main.py \
              --windowed \
              --noconsole \
              --name CarbonCalculator
          elif [ "$RUNNER_OS" == "macOS" ]; then
            pyinstaller \
              --add-data "src/data/resources:resources" \
              --icon "src/data/resources/assets/icon.icns" \
              --paths src \
              src/main.py \
              --windowed \
              --noconsole \
              --name CarbonCalculator
          else
            pyinstaller \
              --add-data "src/data/resources:resources" \
              --icon "src/data/resources/assets/icon.png" \
              --paths src \
              src/main.py \
              --windowed \
              --noconsole \
              --name CarbonCalculator
          fi
        shell: bash
      # Archive the build artifacts
      - run: |
          echo "Current working directory: $(pwd)"
          echo "Files in the current directory:"
          ls -al
          echo "Files in the dist directory:"
          ls -al dist
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            if [ -d dist/CarbonCalculator ]; then
              rm -rf build/CarbonCalculator
              mkdir -p build/
              mv dist/CarbonCalculator build/
            else
              echo "Directory dist/CarbonCalculator not found"
              exit 1
            fi
          elif [ "$RUNNER_OS" == "macOS" ]; then
            if [ -d dist/CarbonCalculator.app ]; then
              rm -rf build/CarbonCalculator
              mkdir -p build/
              mv dist/CarbonCalculator.app build/
            else
              echo "Directory dist/CarbonCalculator.app not found"
              exit 1
            fi
          elif [ "$RUNNER_OS" == "Linux" ]; then
            if [ -d dist/CarbonCalculator ]; then
              rm -rf build/CarbonCalculator
              mkdir -p build/
              mv dist/CarbonCalculator build/
            else
              echo "Directory dist/CarbonCalculator not found"
              exit 1
            fi
          fi
        shell: bash
      # Upload the build artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: CarbonCalculator-${{ matrix.os }}
          path: build/

  release:
    permissions:
      contents: write
    continue-on-error: true
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Download the build artifacts for each OS
      - uses: actions/download-artifact@v4
        with:
          name: CarbonCalculator-ubuntu-latest
          path: linux/
      - uses: actions/download-artifact@v4
        with:
          name: CarbonCalculator-macos-latest
          path: macos/
      - uses: actions/download-artifact@v4
        with:
          name: CarbonCalculator-windows-latest
          path: windows/

      # Debug: List downloaded artifacts
      - name: List downloaded artifacts
        run: |
          echo "Linux artifacts:"
          ls -R linux/
          echo "MacOS artifacts:"
          ls -R macos/
          echo "Windows artifacts:"
          ls -R windows/

      - name: Zip artifacts
        run: |
          cd windows && zip -r CarbonCalculator-windows-latest.zip CarbonCalculator/
          cd ../macos && zip -r CarbonCalculator-macos-latest.zip CarbonCalculator.app/
          cd ../linux && zip -r CarbonCalculator-linux-latest.zip CarbonCalculator/
        shell: bash
      # Create release
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            windows/CarbonCalculator-windows-latest.zip
            macos/CarbonCalculator-macos-latest.zip
            linux/CarbonCalculator-linux-latest.zip
