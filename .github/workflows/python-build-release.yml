name: Build and Release

# Trigger the workflow on push to tags matching the pattern "v*.*.*"
on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read
  packages: write
  actions: write

jobs:
  build:
    continue-on-error: true
    # Define a matrix build to run on the latest versions of Ubuntu, macOS, and Windows
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      # Delete tag on failure
      - name: Delete tag on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = '${{ github.ref }}'.replace('refs/tags/', '');
            await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.name,
              ref: `tags/${tag}`
            });
      - uses: actions/checkout@v4
      # Set up Python 3.12
      - uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.12'
      # Install dependencies
      - run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash
      - name: Install dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxkbcommon-x11-0 libxcb-shape0 libxcb-xkb1 libxcb-icccm4 libxcb-render-util0 libxcb-image0 libxcb-cursor0 libxcb-keysyms1
        shell: bash
      - run: |
          LOG_LEVEL=debug
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            pyinstaller \
              --add-data "src/data/resources:resources" \
              --icon "src/data/resources/assets/icon.ico" \
              --paths src \
              src/main.py \
              --name CarbonCalculator
          elif [ "$RUNNER_OS" == "macOS" ]; then
            pyinstaller \
              --add-data "src/data/resources:resources" \
              --icon "src/data/resources/assets/icon.icns" \
              --paths src \
              src/main.py \
              --name CarbonCalculator
          else
            pyinstaller \
              --add-data "src/data/resources:resources" \
              --icon "src/data/resources/assets/icon.png" \
              --paths src \
              src/main.py \
              --name CarbonCalculator
          fi
        shell: bash
      # Archive the build artifacts
      - run: |
          echo "Current working directory: $(pwd)"
          echo "Files in the current directory:"
          ls -al
          echo "Files in the dist directory:"
          ls -al dist
          mkdir -p build
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            if [ -f dist/CarbonCalculator ]; then
              mv dist/CarbonCalculator build/
            else
              echo "File dist/CarbonCalculator not found"
              exit 1
            fi
          else
            if [ -f dist/CarbonCalculator ]; then
              mv dist/CarbonCalculator build/
            else
              echo "File dist/CarbonCalculator not found"
              exit 1
            fi
          fi
        shell: bash
      # Upload the build artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: CarbonCalculator-${{ matrix.os }}
          path: build/

  release:
    continue-on-error: true
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Delete tag on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = '${{ github.ref }}'.replace('refs/tags/', '');
            await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.name,
              ref: `tags/${tag}`
            });
      # Check for successful build completion
      - name: Check build status
        if: ${{ always() }}
        run: |
          if [ -z "$(ls -A build)" ]; then
            echo "Build failed, no artifacts found."
            exit 1
      # Download the build artifacts for each OS
      - uses: actions/download-artifact@v4
        with:
          name: CarbonCalculator-ubuntu-latest
          path: build/linux
      - uses: actions/download-artifact@v4
        with:
          name: CarbonCalculator-macos-latest
          path: build/macos
      - uses: actions/download-artifact@v4
        with:
          name: CarbonCalculator-windows-latest
          path: build/windows
      # Create a new release
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      # Upload the release assets for each OS
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/linux/CarbonCalculator
          asset_name: CarbonCalculator-linux
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/macos/CarbonCalculator
          asset_name: CarbonCalculator-macos
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/windows/CarbonCalculator.exe
          asset_name: CarbonCalculator-windows.exe
          asset_content_type: application/octet-stream

      - name: Delete tag on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = '${{ github.ref }}'.replace('refs/tags/', '');
            await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.name,
              ref: `tags/${tag}`
            });
